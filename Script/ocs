#!/bin/bash############################################################      Input your desire port and information...#########################################################MyScriptName='blackestsaint'#Server Name for openvpn config and bannerServerName='Project-Fog'Nginx_Port='85' # Server local timeMyVPS_Time='Asia/Manila'############################################################        Project Fog AutoScript Code Begins...#########################################################function InstUpdates(){ export DEBIAN_FRONTEND=noninteractive apt-get update apt-get upgrade -y  # Removing some firewall tools that may affect other services apt-get remove --purge ufw firewalld -y # Installing some important machine essentialsapt -y install nanoapt -y install sudoapt -y install wgetapt -y install curlapt -y install zipapt -y install unzipapt -y install tarapt -y install psmiscapt -y install build-essentialapt -y install gzipapt -y install iptablesapt -y install p7zip-fullapt -y install bcapt -y install rcapt -y install opensslapt -y install cronapt -y install net-toolsapt -y install dnsutilsapt -y install lsofapt -y install dos2unixapt -y install lrzszapt -y install gitapt -y install qrencodeapt -y install libcap2-binapt -y install dbusapt -y install whoisapt -y install ngrepapt -y install screenapt -y install bzip2apt -y install ccryptapt -y install curlapt -y install gccapt -y install automakeapt -y install autoconfapt -y install libxml-parser-perlapt -y install makeapt -y install libtool                         # Now installing all our wanted servicesapt -y install nginx# Installing all required packages to install Webminapt -y install perlapt -y install libnet-ssleay-perlapt -y install opensslapt -y install libauthen-pam-perlapt -y install libpam-runtimeapt -y install libio-pty-perlapt -y install apt-show-versionsapt -y install dbusapt -y install libxml-parser-perlapt -y install shared-mime-infoapt -y install jqapt -y install fail2ban# Installing a text colorizer and designapt -y install figlet###### Chokepoint for Debian and Ubuntu No. 1  vvvvvv# Installing all Web Panel Requirementsapt -y install curlapt -y install wgetapt -y install gnupg2apt -y install ca-certificatesapt -y install lsb-releaseapt -y install apt-transport-httpswget https://packages.sury.org/php/apt.gpgsudo apt-key add apt.gpgecho "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php7.listsudo apt update -yapt -y install php7.0apt -y install php7.0-fpmapt -y install php7.0-cliapt -y install php7.0-commonapt -y install libssh2-1apt -y install php-ssh2apt -y install libgeoip-devapt -y install python-virtualenvapt -y install geoip-database-extraapt -y install  uwsgiapt -y install uwsgi-plugin-pythonsudo update-alternatives --set php /usr/bin/php7.0apt -y install php7.0-ssh2apt -y install php-ssh2-all-dev###### Chokepoint for Debian and Ubuntu No.1  ^^^^^# Certbot for Domain Self Sign Certification 2.3.4xapt -y install certbot}function InstWebmin(){bash <(curl -L -s https://github.com/korn-sudo/Project-Fog/raw/main/files/plugins/webmin)dpkg --install webmin_fog.debsleep 1rm -rf webmin_fog.deb  # Configuring webmin server config to use only http instead of https sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf  # Then restart to take effect systemctl restart webmin}# Creating vps config for our OCS Panelcat <<'myvpsC' > /etc/nginx/conf.d/vps.confserver {  listen       Nginx_Port;  server_name  127.0.0.1 localhost;  access_log /var/log/nginx/vps-access.log;  error_log /var/log/nginx/vps-error.log error;  root   /home/vps/public_html;  location / {    index  index.html index.htm index.php;    try_files $uri $uri/ /index.php?$args;  }  location ~ \.php$ {    include /etc/nginx/fastcgi_params;    fastcgi_pass  127.0.0.1:Php_Socket;    fastcgi_index index.php;    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  }}myvpsC#this is the home page of our webserverwget -O /home/vps/public_html/index.php "https://raw.githubusercontent.com/korn-sudo/Project-Fog/main/files/panel/index.php"# Setting up our WebServer Ports and IP Addressescdsleep 1sed -i "s|/run/php/php7.0-fpm.sock|127.0.0.1:$Php_Socket|g" /etc/php/7.0/fpm/pool.d/www.confsed -i "s|Php_Socket|$Php_Socket|g" /etc/nginx/conf.d/vps.confsed -i "s|Nginx_Port|$Nginx_Port|g" /etc/nginx/conf.d/vps.confservice nginx restart}function ip_address(){  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"  [ ! -z "${IP}" ] && echo "${IP}" || echo} IPADDR="$(ip_address)"function ScriptMessage(){clearecho ""echo ""echo ""echo -e "                            ‚ñë‚ñí‚ñì‚ñà ‚òÅÔ∏è Project Fog ‚òÅÔ∏è ‚ñà‚ñì‚ñí‚ñë" echo " "echo -e "                     This Script is FREE always and forever . . ."echo -e "                               by: blackestsaint ü¶ä  "echo ""echo ""echo -e "                                    Credits to:"echo -e "                                    PHC-Ford [FordSenpai] üê±"echo -e "                                    Bon-chan ü¶¢"echo -e "                                    lfasmpao üêØ"echo -e "                                    ADM-Manager üê¨"echo -e "                                    vaxilu üå§Ô∏è"echo -e "                                    WaGo-G üî•"echo -e "                                    Loyess üôà"echo -e "                                    PHC_Min3 ü¶ã"echo -e "                                    PHC_JAYVEE ‚ò£Ô∏è"echo -e "                                    Lin Song üçè"echo ""echo ""}function Installation-log(){clearecho "   ‚Ä¢ OCS Panel 		: [ON] : http://$IPADDR:$Nginx_Port" | tee -a log-install.txt echo "" | tee -a log-install.txt echo ""read -p " Press enter.."}ScriptMessagesleep 2# Configure Webminecho " Configuring webmin..."InstWebmin#Server Information and Detailsecho "READ ME!"Installation-log#Final Touch (Reboot Remark)Complete-reboot clear cd ~ rm /root/fog-debian -rfexit 1